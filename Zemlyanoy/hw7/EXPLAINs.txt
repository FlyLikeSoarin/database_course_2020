Исходный EXPLAIN:

|id  |select_type      |table       |type   |possible_keys  |key    |key_len|ref |rows  |Extra
|1   |PRIMARY          |<derived2>  |ALL    |NULL           |NULL   |NULL   |NULL|3591  |"Using temporary; Using filesort"
|1   |PRIMARY          |sessions    |ALL    |NULL           |NULL   |NULL   |NULL|3591  |"Using where; Using join buffer (flat, BNL join)"
|2   |DERIVED          |sessions    |ALL    |NULL           |NULL   |NULL   |NULL|3591  |
|3   |"RECURSIVE UNION"|<derived2>  |ALL    |NULL           |NULL   |NULL   |NULL|3591  |"Using where"
|4   |SUBQUERY         |sessions    |ALL    |NULL           |NULL   |NULL   |NULL|3591  |
|NULL|"UNION RESULT"   |"<union2,3>"|ALL    |NULL           |NULL   |NULL   |NULL|NULL  |

Запросы соответственно:
- Запрос cte-таблицы в основном SELECT для формирования JOIN;
- Запрос выборки из sessions для завершения JOIN;
- Запрос наименьшей даты начала из sessions в первом шаге cte;
- Запрос рекурсивного шага cte;
- Запрос наибольшей даты начала из sessions в WHERE-условии в cte;
- Создание итоговой cte-таблицы согласно UNION ALL.

Добавление в таблицу sessions индекса по begin_dttm ускоряет поиск наибольшей/наименьшей даты.
Добавление user_id как второго поля позволяет применить тот же индекс и к подзапросу, формирующему правую сторону JOIN.

И самая главная оптимизация: заменить MAX(CAST(... AS DATE)) на CAST(MAX(...) AS DATE), что позволяет получать наибольшую/наименьшую дату без перебора строк.

Далее cte не улучшается, кроме как еще более эффективным выбором наибольшей/наименьшей даты (фактически, хранением этих двух значений в памяти отдельно).

В результате:

|id  |select_type      |table       |type   |possible_keys  |key    |key_len|ref |rows|Extra
|1   |PRIMARY          |<derived2>  |ALL    |NULL           |NULL   |NULL   |NULL|2   |"Using temporary; Using filesort"
|1   |PRIMARY          |sessions    |index  |NULL           |idx_ses|8      |NULL|3591|"Using where; Using index; Using join buffer (flat, BNL join)"
|2   |DERIVED          |NULL        |NULL   |NULL           |NULL   |NULL   |NULL|NULL|"Select tables optimized away"
|3   |"RECURSIVE UNION"|<derived2>  |ALL    |NULL           |NULL   |NULL   |NULL|2   |"Using where"
|4   |SUBQUERY         |NULL        |NULL   |NULL           |NULL   |NULL   |NULL|NULL|"Select tables optimized away"
|NULL|"UNION RESULT"   |"<union2,3>"|ALL    |NULL           |NULL   |NULL   |NULL|NULL|

